<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.10</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>org.duo</groupId>
    <artifactId>springcloud-demo</artifactId>
    <!--配置<packaging>pom</packaging>的意思是使用maven分模块管理，都会有一个父级项目，pom文件一个重要的属性就是packaging（打包类型），
       一般来说所有的父级项目的packaging都为pom，packaging默认类型jar类型，如果不做配置，maven会将该项目打成jar包-->
    <packaging>pom</packaging>
    <version>1.0-RELEASE</version>
    <name>springcloud-demo</name>
    <description>Parent Project</description>

    <!-- 聚合项目和父子项目是两个概念-->
    <!--聚合项目中父级项目中通过modules将子项目包含进来，父级项目在进行compile,package,install,deploy等项目构建的时候，会把所有的子项目都进行相应的构建-->
    <!--父子项目是通过在子项目中添加parent标签来建立项目之间的依赖关系，实现统一的依赖管理及控制插件的版本-->
    <!--一般在生产环境中，会将两种方式结合起来使用-->

    <!--聚合项目中：子项目模块 -->
    <modules>
        <!--声明 eureka_server 为当前项目 子模块 ，以后有新的子模块添加也要在此添加-->
        <module>eureka</module>
        <module>producer</module>
        <module>consumer</module>
    </modules>

    <properties>
        <java.version>1.8</java.version>
        <spring-cloud.version>2020.0.3</spring-cloud.version>
        <producer-client.version>1.0-RELEASE</producer-client.version>
        <producer-common.version>1.0-RELEASE</producer-common.version>
    </properties>

    <!--父项目中的基本依赖，所有的子项目都会继承-->
    <dependencies></dependencies>

    <!--父项目中的统一管理的依赖：依赖容器，在子项目中使用的时候才会引入-->
    <!-- dependencyManagement里只是声明依赖，并不实现引入，因此子项目需要显示的声明需要用的依赖。-->
    <!--如果不在子项目中声明依赖，是不会从父项目中继承下来的；只有在子项目中写了该依赖项，并且没有指定具体版本，才会从父项目中继承该项，-->
    <!--并且version和scope都读取自父pom;另外如果子项目中指定了版本号，那么会使用子项目中指定的jar版本。-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.duo</groupId>
                <artifactId>producer-client</artifactId>
                <version>${producer-client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.duo</groupId>
                <artifactId>producer-common</artifactId>
                <version>${producer-common.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>${name}-${version}</finalName>
        <plugins>
            <!--            <plugin>-->
            <!--                <groupId>org.springframework.boot</groupId>-->
            <!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
            <!--            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.2.0</version>
            </plugin>
        </plugins>
    </build>
</project>